[{"content":"代码 var autoTouch = setInterval(function(){ save(); },2000); autoTouch; 每两秒就会执行一次sava()函数。\nsetInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。\nsetInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。\n","permalink":"https://blog.mua.blue/2021-09/%E5%88%A9%E7%94%A8chrome%E7%9A%84console%E5%8A%9F%E8%83%BD%E5%BE%AA%E7%8E%AFjs%E5%87%BD%E6%95%B0/","summary":"代码 var autoTouch = setInterval(function(){ save(); },2000); autoTouch; 每两秒就会执行一次sava()函数。\nsetInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。\nsetInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。","title":"利用Chrome的Console功能循环js函数"},{"content":"安装uPic   Homebrew:\nbrew install --cask upic   手动:\n前往作者的Github下载。\n  具体功能可以查看作者博客\n配置uPic 参数:\n API 地址: 填写上面准备好的 [上传服务地址] 请求方式: POST 使用 Base64: 勾选 文件字段名: source URL 路径: 上传完成后获取图片链接的路径。['image', 'url'] Content-Type: multipart/form-data; charset=utf-8; key: 填写上面准备好的 [API Key] action: upload  最后 enjoy!!!\n","permalink":"https://blog.mua.blue/2021-09/upic%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE-chevereto/","summary":"安装uPic   Homebrew:\nbrew install --cask upic   手动:\n前往作者的Github下载。\n  具体功能可以查看作者博客\n配置uPic 参数:\n API 地址: 填写上面准备好的 [上传服务地址] 请求方式: POST 使用 Base64: 勾选 文件字段名: source URL 路径: 上传完成后获取图片链接的路径。['image', 'url'] Content-Type: multipart/form-data; charset=utf-8; key: 填写上面准备好的 [API Key] action: upload  最后 enjoy!!!","title":"uPic图床配置-Chevereto"},{"content":"起因 在写一篇md的时候突然想插入图片，可是本地图片插入后hugo无法正确的生成文章到服务器，这时候就需要使用url图片了。于是我在网上找到了Chevereto。\n安装 方法1： Chevereto-Free Github根据官方文档或者网上教程进行安装。\n方法2：nmtan/chevereto使用docker安装\n因为docker安装起来非常方便，所以我选择方法2进行安装Chevereto。如果没有安装docker and docker-compose可以去看我之前的文章。\nnmtan/chevereto中的overview里已经给出了docker-compose.yml，我们可以直接拿来使用。\n  创建一个空目录，创建docker-compose.yml\n  编写docker-compose.yml\n  #docker-compose.yml version: \u0026#39;3\u0026#39; services: db: image: mariadb volumes: - ./database:/var/lib/mysql:rw restart: always networks: - private environment: MYSQL_ROOT_PASSWORD: chevereto_root MYSQL_DATABASE: chevereto MYSQL_USER: chevereto MYSQL_PASSWORD: chevereto chevereto: depends_on: - db image: nmtan/chevereto restart: always networks: - private environment: CHEVERETO_DB_HOST: db CHEVERETO_DB_USERNAME: chevereto CHEVERETO_DB_PASSWORD: chevereto CHEVERETO_DB_NAME: chevereto CHEVERETO_DB_PREFIX: chv_ volumes: - ./images:/var/www/html/images:rw - ./php.ini:/usr/local/etc/php/php.ini:ro #这个配置文件是为了修改上传2M的限制 ports: - 8004:80 networks: private:  编写php.ini  memory_limit = 256M; upload_max_filesize = 100M; post_max_size = 100M;   使用docker-compose up -d跑起来。\n  宝塔面板创建一个网站  配置反向代理  接着就可以打开网站进行安装，因为docker已经帮我们配置好了mysql和Chevereto之间的连接，我们只需要创建管理员账号。\n  **(可选)**登上管理员账号，打开仪表盘-\u0026gt;设置-\u0026gt;网站将https改为强加，紧接着我们来到宝塔面板给域名申请一个ssl证书，这样和网站传输的数据就会比较安全。\n  **(可选)**修改上传限制，打开仪表盘-\u0026gt;设置-\u0026gt;图片上传前提是前面用php.ini对php进行配置了。\n  enjoy!\n安装时踩的坑   没有在仪表盘配置好https协议，就申请好证书使用https协议进行访问，导致静态文件的链接还是http，浏览器报错不加载http协议的静态文件。其中有一个问题还是没有解决，开始我是根据nmtan/chevereto仓库里的高级配置。\n$val = getenv(\u0026#39;CHEVERETO_HTTPS\u0026#39;); if ($val !== false) { /* * Specify whether user should connect to Chevereto via HTTPS instead of HTTP * Please note that Chevereto has excellent mechanism to detect this * already - https://github.com/Chevereto/Chevereto-Free/blob/0184f27a97daa55ec3b07560c5dd619d22abc907/lib/G/G.php#L113 * So 99% of the time you won\u0026#39;t have to bother with this. The only * usecase that I can image where you need to set this is if you have * a misconfigured reverse proxy that somehow doesn\u0026#39;t include the * `http-x-forwarded-proto` header into the forwarded requests */ $settings[\u0026#39;https\u0026#39;] = strtolower(trim($val)) === \u0026#39;true\u0026#39;; } 在docker-compose.yml里加了一个环境变量CHEVERETO_HTTPS:1可是没用。\n  修改上传限制，将php.ini配置好后还是限制为2M，后来发现原来chevereto里也要改。先改php限制再改chevereto限制。\n  ","permalink":"https://blog.mua.blue/2021-09/chevereto%E5%9B%BE%E5%BA%8A%E5%AE%89%E8%A3%85/","summary":"起因 在写一篇md的时候突然想插入图片，可是本地图片插入后hugo无法正确的生成文章到服务器，这时候就需要使用url图片了。于是我在网上找到了Chevereto。\n安装 方法1： Chevereto-Free Github根据官方文档或者网上教程进行安装。\n方法2：nmtan/chevereto使用docker安装\n因为docker安装起来非常方便，所以我选择方法2进行安装Chevereto。如果没有安装docker and docker-compose可以去看我之前的文章。\nnmtan/chevereto中的overview里已经给出了docker-compose.yml，我们可以直接拿来使用。\n  创建一个空目录，创建docker-compose.yml\n  编写docker-compose.yml\n  #docker-compose.yml version: \u0026#39;3\u0026#39; services: db: image: mariadb volumes: - ./database:/var/lib/mysql:rw restart: always networks: - private environment: MYSQL_ROOT_PASSWORD: chevereto_root MYSQL_DATABASE: chevereto MYSQL_USER: chevereto MYSQL_PASSWORD: chevereto chevereto: depends_on: - db image: nmtan/chevereto restart: always networks: - private environment: CHEVERETO_DB_HOST: db CHEVERETO_DB_USERNAME: chevereto CHEVERETO_DB_PASSWORD: chevereto CHEVERETO_DB_NAME: chevereto CHEVERETO_DB_PREFIX: chv_ volumes: - ./images:/var/www/html/images:rw - ./php.ini:/usr/local/etc/php/php.ini:ro #这个配置文件是为了修改上传2M的限制 ports: - 8004:80 networks: private:  编写php.","title":"Chevereto图床安装"},{"content":"起因 使用hugo的博客搭建好了，目前使用的是PaperMod主题，因为该主题自带图标比较少，我就自己上iconfont找了几个，但是我发现在黑夜模式下，图标不会像自带图标一样由黑变成白的。\n解决办法 例如：bilibili小电视图标\n  白天模式：  黑夜模式：会看不清楚小电视。\n  修改前的代码：\n\u0026lt;svg t=\u0026#34;1632470105372\u0026#34; class=\u0026#34;icon\u0026#34; viewBox=\u0026#34;0 0 1024 1024\u0026#34; version=\u0026#34;1.1\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M386.327273 437.527273h-4.654546l-125.672727 27.927272c-18.618182 4.654545-27.927273 18.618182-23.272727 37.236364v9.309091c4.654545 13.963636 13.963636 23.272727 27.927272 23.272727h4.654546l130.327273-23.272727c18.618182-4.654545 27.927273-18.618182 23.272727-37.236364V465.454545c-4.654545-13.963636-18.618182-27.927273-32.581818-27.927272zM414.254545 605.090909c-9.309091 0-18.618182 9.309091-18.618181 18.618182 0 18.618182 4.654545 37.236364 18.618181 51.2 13.963636 18.618182 32.581818 23.272727 51.2 23.272727 18.618182 0 32.581818-4.654545 46.545455-18.618182h9.309091c13.963636 13.963636 27.927273 18.618182 41.890909 18.618182 18.618182 0 27.927273-4.654545 41.890909-9.309091 23.272727-18.618182 32.581818-41.890909 32.581818-69.818182 0-4.654545 0-4.654545-4.654545-9.30909-9.309091-4.654545-13.963636-4.654545-23.272727-4.654546H605.090909c-9.309091 0-13.963636 9.309091-13.963636 18.618182s0 18.618182-9.309091 23.272727c-4.654545 9.309091-13.963636 13.963636-23.272727 13.963637s-13.963636-4.654545-23.272728-13.963637c-4.654545-9.309091-9.309091-18.618182-9.309091-27.927273 0-9.309091-9.309091-13.963636-18.618181-13.963636s-18.618182 4.654545-18.618182 13.963636v4.654546c0 9.309091-4.654545 23.272727-13.963637 27.927273-4.654545 4.654545-9.309091 4.654545-13.963636 4.654545-9.309091 0-13.963636-4.654545-23.272727-13.963636-4.654545-9.309091-9.309091-18.618182-9.309091-27.927273 4.654545-4.654545-4.654545-9.309091-13.963637-9.309091zM637.672727 437.527273c-13.963636 0-27.927273 9.309091-27.927272 23.272727v9.309091c-4.654545 18.618182 9.309091 32.581818 23.272727 37.236364l125.672727 23.272727h4.654546c13.963636 0 27.927273-9.309091 27.927272-23.272727v-9.309091c4.654545-18.618182-9.309091-32.581818-23.272727-37.236364l-125.672727-23.272727h-4.654546z\u0026#34; fill=\u0026#34;\u0026#34; p-id=\u0026#34;851\u0026#34;\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path d=\u0026#34;M795.927273 325.818182c23.272727 0 41.890909 18.618182 41.890909 41.890909v400.290909c0 23.272727-18.618182 41.890909-41.890909 41.890909H228.072727c-23.272727 4.654545-41.890909-13.963636-41.890909-37.236364V367.709091c0-23.272727 18.618182-41.890909 41.890909-41.890909H795.927273m-65.163637-279.272727c-13.963636 0-27.927273 4.654545-37.236363 18.618181l-139.636364 190.836364h-55.854545L283.927273 125.672727c-4.654545-4.654545-13.963636-4.654545-23.272728-4.654545-13.963636 0-27.927273 4.654545-37.236363 18.618182-4.654545 9.309091-4.654545 23.272727-4.654546 37.236363 4.654545 9.309091 9.309091 23.272727 18.618182 27.927273L325.818182 256H228.072727c-60.509091 0-111.709091 51.2-111.709091 111.709091v400.290909c0 60.509091 51.2 111.709091 111.709091 111.709091H791.272727c60.509091 0 111.709091-51.2 111.709091-111.709091V367.709091c0-60.509091-51.2-111.709091-111.709091-111.709091h-130.327272l102.4-139.636364c13.963636-18.618182 9.309091-46.545455-9.309091-60.509091-4.654545-4.654545-13.963636-9.309091-23.272728-9.30909z\u0026#34; fill=\u0026#34;\u0026#34; p-id=\u0026#34;852\u0026#34;\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;/svg\u0026gt; 修改后的代码：\n\u0026lt;svg t=\u0026#34;1632470105372\u0026#34; class=\u0026#34;icon\u0026#34; viewBox=\u0026#34;0 0 1024 1024\u0026#34; version=\u0026#34;1.1\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; fill=\u0026#34;none\u0026#34; stroke=\u0026#34;currentColor\u0026#34; stroke-width=\u0026#34;2\u0026#34; stroke-linecap=\u0026#34;round\u0026#34; stroke-linejoin=\u0026#34;round\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M386.327273 437.527273h-4.654546l-125.672727 27.927272c-18.618182 4.654545-27.927273 18.618182-23.272727 37.236364v9.309091c4.654545 13.963636 13.963636 23.272727 27.927272 23.272727h4.654546l130.327273-23.272727c18.618182-4.654545 27.927273-18.618182 23.272727-37.236364V465.454545c-4.654545-13.963636-18.618182-27.927273-32.581818-27.927272zM414.254545 605.090909c-9.309091 0-18.618182 9.309091-18.618181 18.618182 0 18.618182 4.654545 37.236364 18.618181 51.2 13.963636 18.618182 32.581818 23.272727 51.2 23.272727 18.618182 0 32.581818-4.654545 46.545455-18.618182h9.309091c13.963636 13.963636 27.927273 18.618182 41.890909 18.618182 18.618182 0 27.927273-4.654545 41.890909-9.309091 23.272727-18.618182 32.581818-41.890909 32.581818-69.818182 0-4.654545 0-4.654545-4.654545-9.30909-9.309091-4.654545-13.963636-4.654545-23.272727-4.654546H605.090909c-9.309091 0-13.963636 9.309091-13.963636 18.618182s0 18.618182-9.309091 23.272727c-4.654545 9.309091-13.963636 13.963636-23.272727 13.963637s-13.963636-4.654545-23.272728-13.963637c-4.654545-9.309091-9.309091-18.618182-9.309091-27.927273 0-9.309091-9.309091-13.963636-18.618181-13.963636s-18.618182 4.654545-18.618182 13.963636v4.654546c0 9.309091-4.654545 23.272727-13.963637 27.927273-4.654545 4.654545-9.309091 4.654545-13.963636 4.654545-9.309091 0-13.963636-4.654545-23.272727-13.963636-4.654545-9.309091-9.309091-18.618182-9.309091-27.927273 4.654545-4.654545-4.654545-9.309091-13.963637-9.309091zM637.672727 437.527273c-13.963636 0-27.927273 9.309091-27.927272 23.272727v9.309091c-4.654545 18.618182 9.309091 32.581818 23.272727 37.236364l125.672727 23.272727h4.654546c13.963636 0 27.927273-9.309091 27.927272-23.272727v-9.309091c4.654545-18.618182-9.309091-32.581818-23.272727-37.236364l-125.672727-23.272727h-4.654546z\u0026#34; fill=\u0026#34;currentColor\u0026#34; p-id=\u0026#34;851\u0026#34;\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path d=\u0026#34;M795.927273 325.818182c23.272727 0 41.890909 18.618182 41.890909 41.890909v400.290909c0 23.272727-18.618182 41.890909-41.890909 41.890909H228.072727c-23.272727 4.654545-41.890909-13.963636-41.890909-37.236364V367.709091c0-23.272727 18.618182-41.890909 41.890909-41.890909H795.927273m-65.163637-279.272727c-13.963636 0-27.927273 4.654545-37.236363 18.618181l-139.636364 190.836364h-55.854545L283.927273 125.672727c-4.654545-4.654545-13.963636-4.654545-23.272728-4.654545-13.963636 0-27.927273 4.654545-37.236363 18.618182-4.654545 9.309091-4.654545 23.272727-4.654546 37.236363 4.654545 9.309091 9.309091 23.272727 18.618182 27.927273L325.818182 256H228.072727c-60.509091 0-111.709091 51.2-111.709091 111.709091v400.290909c0 60.509091 51.2 111.709091 111.709091 111.709091H791.272727c60.509091 0 111.709091-51.2 111.709091-111.709091V367.709091c0-60.509091-51.2-111.709091-111.709091-111.709091h-130.327272l102.4-139.636364c13.963636-18.618182 9.309091-46.545455-9.309091-60.509091-4.654545-4.654545-13.963636-9.309091-23.272728-9.30909z\u0026#34; fill=\u0026#34;currentColor\u0026#34; p-id=\u0026#34;852\u0026#34;\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;/svg\u0026gt; 修改后的效果：\n  白天模式：  黑夜模式：  ","permalink":"https://blog.mua.blue/2021-09/%E5%9B%BE%E6%A0%87%E8%B7%9F%E9%9A%8F%E8%83%8C%E6%99%AF%E5%8F%98%E8%89%B2/","summary":"起因 使用hugo的博客搭建好了，目前使用的是PaperMod主题，因为该主题自带图标比较少，我就自己上iconfont找了几个，但是我发现在黑夜模式下，图标不会像自带图标一样由黑变成白的。\n解决办法 例如：bilibili小电视图标\n  白天模式：  黑夜模式：会看不清楚小电视。\n  修改前的代码：\n\u0026lt;svg t=\u0026#34;1632470105372\u0026#34; class=\u0026#34;icon\u0026#34; viewBox=\u0026#34;0 0 1024 1024\u0026#34; version=\u0026#34;1.1\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;M386.327273 437.527273h-4.654546l-125.672727 27.927272c-18.618182 4.654545-27.927273 18.618182-23.272727 37.236364v9.309091c4.654545 13.963636 13.963636 23.272727 27.927272 23.272727h4.654546l130.327273-23.272727c18.618182-4.654545 27.927273-18.618182 23.272727-37.236364V465.454545c-4.654545-13.963636-18.618182-27.927273-32.581818-27.927272zM414.254545 605.090909c-9.309091 0-18.618182 9.309091-18.618181 18.618182 0 18.618182 4.654545 37.236364 18.618181 51.2 13.963636 18.618182 32.581818 23.272727 51.2 23.272727 18.618182 0 32.581818-4.654545 46.545455-18.618182h9.309091c13.963636 13.963636 27.927273 18.618182 41.890909 18.618182 18.618182 0 27.927273-4.654545 41.890909-9.309091 23.272727-18.618182 32.581818-41.890909 32.581818-69.818182 0-4.654545 0-4.654545-4.654545-9.30909-9.309091-4.654545-13.963636-4.654545-23.272727-4.654546H605.090909c-9.309091 0-13.963636 9.","title":"图标跟随背景变色"},{"content":"Centos7正确安装docker/docker-compse 安装docker   yum -y update 先升级，yum有两个升级命令update和upgrade\n yum -y update：升级所有包同时，也升级软件和系统内核；\nyum -y upgrade：只升级所有包，不升级软件和系统内核，软件和内核保持原样。\n  -y 代表着当安装包时询问你Is this OK[y/d/N]，就会自动选择y，不需要你再手动选择。\n 出现Complete!即为更新完成\n  yum -y install docker   docker -v  出现Docker version 1.13.1, build 7d71120/1.13.1相似结果即成功安装\n  启动：sudo systemctl start docker\n设置开机启动：sudo systemctl enable docker\n   安装docker-compose   pip3 install --upgrade pip #加上--upgrade为升级包而不是安装包   pip3 install docker-compose 而我在最新版本启动docker-compose报错\n$ docker-compose up Building tomcat unknown flag: --iidfile See \u0026#39;docker build --help\u0026#39;. ERROR: Service \u0026#39;tomcat\u0026#39; failed to build 谷歌后解决方法为降级\nrm -f /usr/local/bin/docker-compose pip install docker-compose==1.26.2   运行时可能会出现的问题   Creating network \u0026#34;xxxxx\u0026#34; with the default driver ERROR: Failed to Setup IP tables: Unable to enable SKIP DNAT rule: (iptables failed: iptables --wait -t nat -I DOCKER -i br-c7abf8aa9caa -j RETURN: iptables: No chain/target/match by that name. (exit status 1)) 解决方法：\n systemctl stop docker systemctl start docker    ","permalink":"https://blog.mua.blue/2021-09/centos7%E6%AD%A3%E7%A1%AE%E5%AE%89%E8%A3%85docker/docker-compse/","summary":"Centos7正确安装docker/docker-compse 安装docker   yum -y update 先升级，yum有两个升级命令update和upgrade\n yum -y update：升级所有包同时，也升级软件和系统内核；\nyum -y upgrade：只升级所有包，不升级软件和系统内核，软件和内核保持原样。\n  -y 代表着当安装包时询问你Is this OK[y/d/N]，就会自动选择y，不需要你再手动选择。\n 出现Complete!即为更新完成\n  yum -y install docker   docker -v  出现Docker version 1.13.1, build 7d71120/1.13.1相似结果即成功安装\n  启动：sudo systemctl start docker\n设置开机启动：sudo systemctl enable docker\n   安装docker-compose   pip3 install --upgrade pip #加上--upgrade为升级包而不是安装包   pip3 install docker-compose 而我在最新版本启动docker-compose报错\n$ docker-compose up Building tomcat unknown flag: --iidfile See \u0026#39;docker build --help\u0026#39;.","title":"Centos7正确安装docker/docker-compse"},{"content":"宝塔取消登陆限制 现在宝塔面板好恶心，安装完毕之后必须登录账号，否则无法进入面板进行操作。\n于是我上网上找了一些取消限制的方法，有很多方法都失效了，没办法使用，还会造成面板异常。\n  简单粗暴\nrm -f /www/server/panel/data/bind.pl   执行后就可以正常使用了。\n","permalink":"https://blog.mua.blue/2021-09/%E5%AE%9D%E5%A1%94%E5%8F%96%E6%B6%88%E7%99%BB%E9%99%86%E9%99%90%E5%88%B6/","summary":"宝塔取消登陆限制 现在宝塔面板好恶心，安装完毕之后必须登录账号，否则无法进入面板进行操作。\n于是我上网上找了一些取消限制的方法，有很多方法都失效了，没办法使用，还会造成面板异常。\n  简单粗暴\nrm -f /www/server/panel/data/bind.pl   执行后就可以正常使用了。","title":"宝塔取消登陆限制"},{"content":"linux后台运行脚本  运行  nohup command \u0026gt; run.log 2\u0026gt;\u0026amp;1 \u0026amp; 将标准错误2重定向到标准输出**\u0026amp;1**，标准输出**\u0026amp;1**再被重定向输入到**run.log**文件中。最后一个\u0026amp;代表后台运行的意思。 **nohup**英文全称 no hang up（不挂起），用于在系统后台不挂断地运行命令，退出终端不会影响程序的运行。\nps:在执行python脚本时最好加上-u参数，-u 代表程序不启用缓存，也就是把输出直接放到log中，没这个参数的话，log文件的生成会有延迟。\n终止  如果没有关闭当前终端jobs -l查看进程，如果关闭了当前终端还想查看ps -aux|grep 需查找的\n最后使用 kill -9 pid来杀死进程\n -9为强制杀死进程\n ","permalink":"https://blog.mua.blue/2021-09/linux%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/","summary":"linux后台运行脚本  运行  nohup command \u0026gt; run.log 2\u0026gt;\u0026amp;1 \u0026amp; 将标准错误2重定向到标准输出**\u0026amp;1**，标准输出**\u0026amp;1**再被重定向输入到**run.log**文件中。最后一个\u0026amp;代表后台运行的意思。 **nohup**英文全称 no hang up（不挂起），用于在系统后台不挂断地运行命令，退出终端不会影响程序的运行。\nps:在执行python脚本时最好加上-u参数，-u 代表程序不启用缓存，也就是把输出直接放到log中，没这个参数的话，log文件的生成会有延迟。\n终止  如果没有关闭当前终端jobs -l查看进程，如果关闭了当前终端还想查看ps -aux|grep 需查找的\n最后使用 kill -9 pid来杀死进程\n -9为强制杀死进程\n ","title":"linux后台运行脚本"},{"content":"原文 From reading Chrome is Bad, it seems in some situations the updater (also known as keystone) can chew up CPU cycles. Whilst I’m not 100% convinced keystone continuously chews CPU, its launchctl configuration suggests it runs at least once an hour. Given I don’t use Chrome as my main browser, this is undesirable behaviour for me.\nWith that in mind, I’ve decided to disable the background services rather than delete Chrome entirely. (I need it occasionally.) Stopping/unloading the services and fettling the config files to do nothing achieves this aim (and stops Chrome re-enabling them next launch), whilst leaving Chrome fully functional when needed.\n1.Unload the currently loaded services\nlaunchctl unload -w ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rlaunchctl unload -w ~/Library/LaunchAgents/com.google.keystone.agent.plist\r2.Empty the config files, so if launchd ever tries to launch them they’ll just error out\necho \u0026gt; ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\recho \u0026gt; ~/Library/LaunchAgents/com.google.keystone.agent.plist\r3.Change ownership and permissions of these files so only root can write to the files\nchmod 644 ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rchmod 644 ~/Library/LaunchAgents/com.google.keystone.agent.plist\rsudo chown root ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rsudo chown root ~/Library/LaunchAgents/com.google.keystone.agent.plist\rNow when I want to update Chrome once in a blue moon when I need it, I can navigate to [chrome://settings/help][1] to update (or from the UI, Chrome -\u0026gt; About Chrome.)\n翻译 从阅读Chrome是坏的，在某些情况下，更新程序（也称为基石）似乎可以咀嚼CPU周期。虽然我不是100%相信Keystone会持续咀嚼CPU，但其launchctl配置表明它每小时至少运行一次。鉴于我不使用Chrome作为主浏览器，这对我来说是不受欢迎的行为。\n考虑到这一点，我决定禁用后台服务，而不是完全删除Chrome。（我偶尔需要它。）停止/卸载服务并固定配置文件什么都不做，可以实现这一目标（并阻止Chrome在下次启动时重新启用它们），同时在需要时让Chrome完全正常工作。\n1.卸载当前加载的服务\nlaunchctl unload -w ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rlaunchctl unload -w ~/Library/LaunchAgents/com.google.keystone.agent.plist\r2.清空配置文件，因此，如果启动尝试启动它们，它们只会出错\necho \u0026gt; ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\recho \u0026gt; ~/Library/LaunchAgents/com.google.keystone.agent.plist\r3.更改这些文件的所有权和权限，以便只有根可以写入文件\nchmod 644 ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rchmod 644 ~/Library/LaunchAgents/com.google.keystone.agent.plist\rsudo chown root ~/Library/LaunchAgents/com.google.keystone.xpcservice.plist\rsudo chown root ~/Library/LaunchAgents/com.google.keystone.agent.plist\r现在，当我想在需要时一月更新Chrome时，我可以导航到[chrome://settings/help][1]进行更新（或从UI，Chrome-\u0026gt;关于Chrome。） [1]: chrome://settings/help\n","permalink":"https://blog.mua.blue/2021-09/mac%E7%A6%81%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/","summary":"原文 From reading Chrome is Bad, it seems in some situations the updater (also known as keystone) can chew up CPU cycles. Whilst I’m not 100% convinced keystone continuously chews CPU, its launchctl configuration suggests it runs at least once an hour. Given I don’t use Chrome as my main browser, this is undesirable behaviour for me.\nWith that in mind, I’ve decided to disable the background services rather than delete Chrome entirely.","title":"Mac禁用谷歌浏览器自动更新"},{"content":"Homebrew安装jdk 因为电脑上没有jdk需要安装一个，首先去homebrew仓库里搜索jdk但是很奇怪，感觉都不是官方的。于是我去百度搜索，找到这个命令\nbrew cask install homebrew/cask-versions/adoptopenjdk8 //但是无法使用，进行报错搜索后发现homebrew已经丢弃这种用法 //目前正确用法 brew install --cask homebrew/cask-versions/adoptopenjdk8 如果下载速度比较慢挂个终端代理就好。\n","permalink":"https://blog.mua.blue/2021-09/mac%E4%BD%BF%E7%94%A8homebrew%E5%AE%89%E8%A3%85jdk/","summary":"Homebrew安装jdk 因为电脑上没有jdk需要安装一个，首先去homebrew仓库里搜索jdk但是很奇怪，感觉都不是官方的。于是我去百度搜索，找到这个命令\nbrew cask install homebrew/cask-versions/adoptopenjdk8 //但是无法使用，进行报错搜索后发现homebrew已经丢弃这种用法 //目前正确用法 brew install --cask homebrew/cask-versions/adoptopenjdk8 如果下载速度比较慢挂个终端代理就好。","title":"mac使用homebrew安装jdk"},{"content":"在网上找了很久都没有发现可以登录的共享账号，还险些去购买了了一个共享账号。还好在谷歌上找到一个网站，里面的账号可以用，看着也很靠谱。Get Shadowrocket\n","permalink":"https://blog.mua.blue/2021-09/shadowrocket-ios%E4%B8%8B%E8%BD%BD/","summary":"在网上找了很久都没有发现可以登录的共享账号，还险些去购买了了一个共享账号。还好在谷歌上找到一个网站，里面的账号可以用，看着也很靠谱。Get Shadowrocket","title":"shadowrocket ios下载"},{"content":"因为我的电脑是Macbook2020 M1自带了git，所以不需要进行下载操作。安装应该也很简单，使用brew install git即可。配置参考如何使用Git上传本地项目到github(mac版)，如果以后需要在一个电脑使用多个Git账户可以参考Mac多个Git账户配置\n","permalink":"https://blog.mua.blue/2021-09/mac%E4%B8%8Bgit%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E5%88%B0github/","summary":"因为我的电脑是Macbook2020 M1自带了git，所以不需要进行下载操作。安装应该也很简单，使用brew install git即可。配置参考如何使用Git上传本地项目到github(mac版)，如果以后需要在一个电脑使用多个Git账户可以参考Mac多个Git账户配置","title":"Mac下Git上传本地项目到Github"},{"content":"Mac软件网站推荐    名称 ©️原因下架 速度 特点     MacWk 比较多 快 页面好看，深受大众好评，看着靠谱   Digit77 没发现 慢 搜索引擎搜起来有点慢   Macbed 没发现 慢 国外网站   TNT TEAM 没发现 快 看着新开的网站，并不是tnt team开的，但是是搬运tnt team的软件。   Macenjoy 比较少 慢(开会员快) 下架的可以通过开通会员下载。     国内的差不多都在这7-3  ","permalink":"https://blog.mua.blue/2021-09/mac%E8%BD%AF%E4%BB%B6%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/","summary":"Mac软件网站推荐    名称 ©️原因下架 速度 特点     MacWk 比较多 快 页面好看，深受大众好评，看着靠谱   Digit77 没发现 慢 搜索引擎搜起来有点慢   Macbed 没发现 慢 国外网站   TNT TEAM 没发现 快 看着新开的网站，并不是tnt team开的，但是是搬运tnt team的软件。   Macenjoy 比较少 慢(开会员快) 下架的可以通过开通会员下载。     国内的差不多都在这7-3  ","title":"Mac软件网站推荐"}]